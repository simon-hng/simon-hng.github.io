{"version":3,"sources":["webpack://simonhng/./src/components/simomns/simomns.tsx","webpack://simonhng/./src/pages/index.tsx"],"names":["props","animationContainer","createRef","animationData","idle","animationIdle","wave","animationWave","useState","animation","setAnimation","useEffect","updateAnimation","startAnimation","animationName","lottie","container","current","renderer","loop","autoplay","queueAnimation","addEventListener","destroy","ref","onClick","simomnsAnimation"],"mappings":"khzkCAyDA,EAnDgB,SAACA,GACf,IAAMC,GAAqBC,iBACrBC,EAAgB,CAAEC,KAAMC,EAAeC,KAAMC,GAFE,GAIrBC,gBAA3BC,EAJgD,KAIrCC,EAJqC,MAMrDC,gBAAU,WACRC,EAAgBZ,EAAMa,kBACrB,IAEH,IAAMD,EAAkB,SAACE,GACvBJ,EACEK,kBAAqB,CACnBC,UAAWf,EAAmBgB,QAC9BC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVjB,cAAeA,EAAcW,OAK7BO,EAAiB,SAACP,GACtBL,EAAUa,iBAAiB,gBAAgB,WACzCb,EAAUc,UACVX,EAAgBE,OAIpB,OACE,+BACE,uBAAKU,IAAKvB,IACV,0BACEwB,QAAS,WACPJ,EAAe,UAFnB,QAQA,0BACEI,QAAS,WACPJ,EAAe,UAFnB,UClCN,EATkB,WAAM,OACwBb,cAAS,QAAlDkB,EADiB,UAEtB,OACE,+BACE,gBAAC,EAAD,CAASb,eAAgBa","file":"component---src-pages-index-tsx-15b339f1b8b1b3d725b0.js","sourcesContent":["import React, { createRef, useState, useEffect } from \"react\";\nimport lottie, { AnimationItem } from \"lottie-web\";\n\nimport animationIdle from \"./animations/idle.json\";\nimport animationWave from \"./animations/wave.json\";\n\nconst Simomns = (props: { startAnimation: string }) => {\n  const animationContainer = createRef();\n  const animationData = { idle: animationIdle, wave: animationWave };\n\n  let [animation, setAnimation] = useState<AnimationItem>();\n\n  useEffect(() => {\n    updateAnimation(props.startAnimation);\n  }, []);\n\n  const updateAnimation = (animationName: string) => {\n    setAnimation(\n      lottie.loadAnimation({\n        container: animationContainer.current,\n        renderer: \"svg\",\n        loop: true,\n        autoplay: true,\n        animationData: animationData[animationName],\n      })\n    );\n  };\n\n  const queueAnimation = (animationName: string) => {\n    animation.addEventListener(\"loopComplete\", () => {\n      animation.destroy();\n      updateAnimation(animationName);\n    });\n  };\n\n  return (\n    <section>\n      <div ref={animationContainer}></div>\n      <button\n        onClick={() => {\n          queueAnimation(\"wave\");\n        }}\n      >\n        wave\n      </button>\n\n      <button\n        onClick={() => {\n          queueAnimation(\"idle\");\n        }}\n      >\n        idle\n      </button>\n    </section>\n  );\n};\n\nexport default Simomns;\n","import React, { useState } from \"react\";\nimport Simomns from \"../components/simomns/simomns\";\n\nconst IndexPage = () => {\n  let [simomnsAnimation, setSimomnsAnimation] = useState(\"idle\");\n  return (\n    <section>\n      <Simomns startAnimation={simomnsAnimation} />\n    </section>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}